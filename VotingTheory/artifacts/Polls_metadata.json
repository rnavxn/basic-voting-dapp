{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "title",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bytes32[]",
						"name": "options",
						"type": "bytes32[]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "duration",
						"type": "uint256"
					}
				],
				"name": "PollCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "voter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "pollId",
						"type": "uint256"
					}
				],
				"name": "Voted",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_title",
						"type": "string"
					},
					{
						"internalType": "bytes32[]",
						"name": "_options",
						"type": "bytes32[]"
					},
					{
						"internalType": "uint32",
						"name": "_duration",
						"type": "uint32"
					}
				],
				"name": "createPoll",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pollId",
						"type": "uint256"
					}
				],
				"name": "getPoll",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					},
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pollId",
						"type": "uint256"
					}
				],
				"name": "getResults",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalPolls",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "polls",
				"outputs": [
					{
						"internalType": "string",
						"name": "title",
						"type": "string"
					},
					{
						"internalType": "uint32",
						"name": "endTime",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pollId",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "_option",
						"type": "bytes32"
					}
				],
				"name": "vote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Navin Rajmohan",
			"custom:experimental": "This is an experimental contract.",
			"details": "All function calls are currently implemented without side effects",
			"kind": "dev",
			"methods": {
				"createPoll(string,bytes32[],uint32)": {
					"details": "A function to create the poll in DApp"
				},
				"getPoll(uint256)": {
					"details": "Afunction to get poll details"
				},
				"getResults(uint256)": {
					"details": "A function to retrieve the votes"
				},
				"getTotalPolls()": {
					"details": "A function to get totla polls"
				},
				"vote(uint256,bytes32)": {
					"details": "A fucntion to make the vote"
				}
			},
			"title": "A contract for managing polls",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "You can use this contract for only the most basic voting",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"VotingTheory/polls.sol": "Polls"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"VotingTheory/polls.sol": {
			"keccak256": "0x5dee6f69ee6df69b48639474039ba9362a33b5df9c554b5a97554951a99eec25",
			"license": "MIT",
			"urls": [
				"bzz-raw://7eb1f8a544750b7eae624dea633797b57ccfd39bca565cc06566284782782f59",
				"dweb:/ipfs/QmNb1RfPCTBGaqsyAyn6sAEnQqFa9cpfXxBK1aJCrBaBjY"
			]
		}
	},
	"version": 1
}